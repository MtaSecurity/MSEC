<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>REs on MSEC</title>
    <link>http://localhost:1313/re/</link>
    <description>Recent content in REs on MSEC</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/re/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Write-up for Chatbot CSCV2025</title>
      <link>http://localhost:1313/re/1761315251658-re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/re/1761315251658-re/</guid>
      <description>&lt;p&gt;Hello everyoneüíØ! Today i will tell you the way to solve the &lt;em&gt;&lt;strong&gt;Chatbot&lt;/strong&gt;&lt;/em&gt; challenge in CSCV2025&lt;/p&gt;&#xA;&lt;p&gt;The question:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/r1KnQ9zRxx.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So at first you will have an file &lt;strong&gt;main&lt;/strong&gt; like this below:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/HyCOV9zCgx.png&#34; alt=&#34;image&#34;&gt;&#xA;Let open this file in DIE to see the information about this file:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/Sk8yH9zAll.png&#34; alt=&#34;image&#34;&gt;&#xA;This is an ELF64 file and DIE has told us that this file have been packed with PyInstaller&#xA;Let use IDA(in app use SHIFT+F12) to see strings of this file:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/ByuAB9MRxx.png&#34; alt=&#34;image&#34;&gt;&#xA;Scroll down a little bit and you will see this:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/rJ3ZLcf0xl.png&#34; alt=&#34;image&#34;&gt;&#xA;We see many file like Py_ so that means this file was built by python&#xA;We will use &lt;strong&gt;pyinstxtrator.py&lt;/strong&gt; to export the content of this file(point in the &lt;strong&gt;main&lt;/strong&gt; file to open terminal)&#xA;Type:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write-up for Reverse Master CSCV2025 </title>
      <link>http://localhost:1313/re/1761315247629-re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/re/1761315247629-re/</guid>
      <description>&lt;p&gt;Hello everyoneü´°! Today I will write a little bit about The &lt;em&gt;&lt;strong&gt;Reverse Master&lt;/strong&gt;&lt;/em&gt; challenge in CSCV2025.&#xA;The question:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/B1vSBTNAee.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When we install the file we will have an apk file like this:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/Bk60raNReg.png&#34; alt=&#34;image&#34;&gt;&#xA;Use &lt;strong&gt;jadx-gui&lt;/strong&gt; to decompile this file,then open &lt;strong&gt;Source code/com/ctf.challenge&lt;/strong&gt; and you will see &lt;strong&gt;Main Activity&lt;/strong&gt; like this:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/BJ7-D6NRlx.png&#34; alt=&#34;image&#34;&gt;&#xA;Open that and you will see the code below:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package com.ctf.challenge;&#xD;&#xA;&#xD;&#xA;import android.graphics.Color;&#xD;&#xA;import android.os.Bundle;&#xD;&#xA;import android.util.Log;&#xD;&#xA;import android.view.View;&#xD;&#xA;import android.view.ViewGroup;&#xD;&#xA;import android.widget.Button;&#xD;&#xA;import android.widget.LinearLayout;&#xD;&#xA;import android.widget.TextView;&#xD;&#xA;import androidx.appcompat.app.AppCompatActivity;&#xD;&#xA;import com.google.android.material.textfield.TextInputEditText;&#xD;&#xA;import com.google.android.material.textfield.TextInputLayout;&#xD;&#xA;import java.io.BufferedReader;&#xD;&#xA;import java.io.File;&#xD;&#xA;import java.io.IOException;&#xD;&#xA;import java.io.InputStreamReader;&#xD;&#xA;import java.net.InetSocketAddress;&#xD;&#xA;import java.net.Socket;&#xD;&#xA;import o.CountDownTimerC0176z3;&#xD;&#xA;import o.F2;&#xD;&#xA;import o.F3;&#xD;&#xA;import o.RunnableC0154w;&#xD;&#xA;import o.V4;&#xD;&#xA;&#xD;&#xA;/* loaded from: classes.dex */&#xD;&#xA;public final class MainActivity extends AppCompatActivity {&#xD;&#xA;    public static final /* synthetic */ int b = 0;&#xD;&#xA;    public final byte[] a = {66, 51, 122, 33, 86};&#xD;&#xA;&#xD;&#xA;    static {&#xD;&#xA;        try {&#xD;&#xA;            System.loadLibrary(&amp;#34;native-lib&amp;#34;);&#xD;&#xA;        } catch (UnsatisfiedLinkError e) {&#xD;&#xA;            Log.e(&amp;#34;CTF&amp;#34;, &amp;#34;‚ùå Native lib failed: &amp;#34; + e.getMessage());&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public final native boolean checkSecondHalf(String str);&#xD;&#xA;&#xD;&#xA;    public final native String getHint();&#xD;&#xA;&#xD;&#xA;    public final void h(LinearLayout linearLayout, String str, String str2) {&#xD;&#xA;        View viewInflate = getLayoutInflater().inflate(android.R.layout.simple_list_item_2, (ViewGroup) linearLayout, false);&#xD;&#xA;        TextView textView = (TextView) viewInflate.findViewById(android.R.id.text1);&#xD;&#xA;        TextView textView2 = (TextView) viewInflate.findViewById(android.R.id.text2);&#xD;&#xA;        textView.setText(&amp;#34;‚ö†Ô∏è &amp;#34;.concat(str));&#xD;&#xA;        textView.setTextColor(Color.parseColor(&amp;#34;#FF5252&amp;#34;));&#xD;&#xA;        textView.setTextSize(16.0f);&#xD;&#xA;        textView.setTypeface(null, 1);&#xD;&#xA;        textView2.setText(str2);&#xD;&#xA;        textView2.setTextColor(Color.parseColor(&amp;#34;#BDBDBD&amp;#34;));&#xD;&#xA;        textView2.setTextSize(13.0f);&#xD;&#xA;        linearLayout.addView(viewInflate);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    @Override // androidx.fragment.app.FragmentActivity, androidx.activity.ComponentActivity, androidx.core.app.ComponentActivity, android.app.Activity&#xD;&#xA;    public final void onCreate(Bundle bundle) throws IOException {&#xD;&#xA;        boolean z;&#xD;&#xA;        String line;&#xD;&#xA;        super.onCreate(bundle);&#xD;&#xA;        setContentView(R.layout.activity_main);&#xD;&#xA;        boolean z2 = false;&#xD;&#xA;        boolean z3 = (getApplicationInfo().flags &amp;amp; 2) != 0;&#xD;&#xA;        String[] strArr = {&amp;#34;/system/app/Superuser.apk&amp;#34;, &amp;#34;/sbin/su&amp;#34;, &amp;#34;/system/bin/su&amp;#34;, &amp;#34;/system/xbin/su&amp;#34;, &amp;#34;/data/local/xbin/su&amp;#34;, &amp;#34;/data/local/bin/su&amp;#34;, &amp;#34;/system/sd/xbin/su&amp;#34;, &amp;#34;/system/bin/failsafe/su&amp;#34;, &amp;#34;/data/local/su&amp;#34;};&#xD;&#xA;        int i = 0;&#xD;&#xA;        while (true) {&#xD;&#xA;            if (i &amp;gt;= 9) {&#xD;&#xA;                try {&#xD;&#xA;                    Runtime.getRuntime().exec(&amp;#34;su&amp;#34;);&#xD;&#xA;                    break;&#xD;&#xA;                } catch (Exception unused) {&#xD;&#xA;                    z = false;&#xD;&#xA;                }&#xD;&#xA;            } else if (new File(strArr[i]).exists()) {&#xD;&#xA;                break;&#xD;&#xA;            } else {&#xD;&#xA;                i++;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        z = true;&#xD;&#xA;        try {&#xD;&#xA;            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec(&amp;#34;ps&amp;#34;).getInputStream()));&#xD;&#xA;            do {&#xD;&#xA;                line = bufferedReader.readLine();&#xD;&#xA;                if (line == null) {&#xD;&#xA;                    break;&#xD;&#xA;                } else if (!V4.u(line, &amp;#34;frida&amp;#34;) &amp;amp;&amp;amp; !V4.u(line, &amp;#34;gum-js-loop&amp;#34;)) {&#xD;&#xA;                }&#xD;&#xA;            } while (!V4.u(line, &amp;#34;gmain&amp;#34;));&#xD;&#xA;            z2 = true;&#xD;&#xA;            bufferedReader.close();&#xD;&#xA;        } catch (Exception unused2) {&#xD;&#xA;        }&#xD;&#xA;        int i2 = 27042;&#xD;&#xA;        while (true) {&#xD;&#xA;            if (i2 &amp;gt;= 27053) {&#xD;&#xA;                break;&#xD;&#xA;            }&#xD;&#xA;            try {&#xD;&#xA;                Socket socket = new Socket();&#xD;&#xA;                socket.connect(new InetSocketAddress(&amp;#34;127.0.0.1&amp;#34;, i2), 100);&#xD;&#xA;                socket.close();&#xD;&#xA;                z2 = true;&#xD;&#xA;                break;&#xD;&#xA;            } catch (Exception unused3) {&#xD;&#xA;                i2++;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if (!z3 &amp;amp;&amp;amp; !z &amp;amp;&amp;amp; !z2) {&#xD;&#xA;            Thread thread = new Thread(new RunnableC0154w(8, this));&#xD;&#xA;            thread.setDaemon(true);&#xD;&#xA;            thread.start();&#xD;&#xA;            final TextInputLayout textInputLayout = (TextInputLayout) findViewById(R.id.flagInputLayout);&#xD;&#xA;            final TextInputEditText textInputEditText = (TextInputEditText) findViewById(R.id.flagInput);&#xD;&#xA;            Button button = (Button) findViewById(R.id.checkButton);&#xD;&#xA;            Button button2 = (Button) findViewById(R.id.hintButton);&#xD;&#xA;            button.setOnClickListener(new View.OnClickListener() { // from class: o.y3&#xD;&#xA;                /* JADX WARN: Removed duplicated region for block: B:4:0x001a  */&#xD;&#xA;                @Override // android.view.View.OnClickListener&#xD;&#xA;                /*&#xD;&#xA;                    Code decompiled incorrectly, please refer to instructions dump.&#xD;&#xA;                    To view partially-correct code enable &amp;#39;Show inconsistent code&amp;#39; option in preferences&#xD;&#xA;                */&#xD;&#xA;                public final void onClick(android.view.View r13) {&#xD;&#xA;                    /*&#xD;&#xA;                        r12 = this;&#xD;&#xA;                        r13 = 16&#xD;&#xA;                        r0 = 1&#xD;&#xA;                        int r1 = com.ctf.challenge.MainActivity.b&#xD;&#xA;                        com.google.android.material.textfield.TextInputEditText r1 = r1&#xD;&#xA;                        android.text.Editable r1 = r1.getText()&#xD;&#xA;                        java.lang.String r1 = java.lang.String.valueOf(r1)&#xD;&#xA;                        com.ctf.challenge.MainActivity r2 = r2&#xD;&#xA;                        java.lang.String r3 = &amp;#34;CSCV2025{&amp;#34;&#xD;&#xA;                        boolean r3 = r1.startsWith(r3)&#xD;&#xA;                        r4 = 0&#xD;&#xA;                        if (r3 != 0) goto L1c&#xD;&#xA;                    L1a:&#xD;&#xA;                        r13 = r4&#xD;&#xA;                        goto L6e&#xD;&#xA;                    L1c:&#xD;&#xA;                        java.lang.String r3 = &amp;#34;}&amp;#34;&#xD;&#xA;                        boolean r3 = r1.endsWith(r3)&#xD;&#xA;                        if (r3 != 0) goto L25&#xD;&#xA;                        goto L1a&#xD;&#xA;                    L25:&#xD;&#xA;                        int r3 = r1.length()&#xD;&#xA;                        int r3 = r3 - r0&#xD;&#xA;                        r5 = 9&#xD;&#xA;                        java.lang.String r1 = r1.substring(r5, r3)&#xD;&#xA;                        java.lang.String r3 = &amp;#34;substring(...)&amp;#34;&#xD;&#xA;                        o.F2.e(r1, r3)&#xD;&#xA;                        java.lang.String r5 = r1.substring(r4, r13)&#xD;&#xA;                        o.F2.e(r5, r3)&#xD;&#xA;                        byte[] r6 = new byte[r13]&#xD;&#xA;                        r6 = {x0090: FILL_ARRAY_DATA , data: [122, 86, 27, 22, 53, 35, 80, 77, 24, 98, 122, 7, 72, 21, 98, 114} // fill-array&#xD;&#xA;                        byte[] r7 = new byte[r13]&#xD;&#xA;                        r8 = r4&#xD;&#xA;                    L44:&#xD;&#xA;                        if (r8 &amp;gt;= r13) goto L55&#xD;&#xA;                        r9 = r6[r8]&#xD;&#xA;                        byte[] r10 = r2.a&#xD;&#xA;                        int r11 = r10.length&#xD;&#xA;                        int r11 = r8 % r11&#xD;&#xA;                        r10 = r10[r11]&#xD;&#xA;                        r9 = r9 ^ r10&#xD;&#xA;                        byte r9 = (byte) r9&#xD;&#xA;                        r7[r8] = r9&#xD;&#xA;                        int r8 = r8 + r0&#xD;&#xA;                        goto L44&#xD;&#xA;                    L55:&#xD;&#xA;                        java.lang.String r6 = new java.lang.String&#xD;&#xA;                        java.nio.charset.Charset r8 = o.X.a&#xD;&#xA;                        r6.&amp;lt;init&amp;gt;(r7, r8)&#xD;&#xA;                        boolean r5 = r5.equals(r6)&#xD;&#xA;                        if (r5 != 0) goto L63&#xD;&#xA;                        goto L1a&#xD;&#xA;                    L63:&#xD;&#xA;                        java.lang.String r13 = r1.substring(r13)&#xD;&#xA;                        o.F2.e(r13, r3)&#xD;&#xA;                        boolean r13 = r2.checkSecondHalf(r13)&#xD;&#xA;                    L6e:&#xD;&#xA;                        com.google.android.material.textfield.TextInputLayout r1 = r3&#xD;&#xA;                        if (r13 == 0) goto L80&#xD;&#xA;                        java.lang.String r13 = &amp;#34;üéâ Correct! Flag is valid!&amp;#34;&#xD;&#xA;                        android.widget.Toast r13 = android.widget.Toast.makeText(r2, r13, r0)&#xD;&#xA;                        r13.show()&#xD;&#xA;                        r13 = 0&#xD;&#xA;                        r1.setError(r13)&#xD;&#xA;                        return&#xD;&#xA;                    L80:&#xD;&#xA;                        java.lang.String r13 = &amp;#34;‚ùå Wrong flag! Try again!&amp;#34;&#xD;&#xA;                        android.widget.Toast r13 = android.widget.Toast.makeText(r2, r13, r4)&#xD;&#xA;                        r13.show()&#xD;&#xA;                        java.lang.String r13 = &amp;#34;Invalid flag&amp;#34;&#xD;&#xA;                        r1.setError(r13)&#xD;&#xA;                        return&#xD;&#xA;                    */&#xD;&#xA;                    throw new UnsupportedOperationException(&amp;#34;Method not decompiled: o.ViewOnClickListenerC0170y3.onClick(android.view.View):void&amp;#34;);&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            button2.setOnClickListener(new F3(3, this));&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        setContentView(R.layout.security_warning);&#xD;&#xA;        TextView textView = (TextView) findViewById(R.id.countdownText);&#xD;&#xA;        LinearLayout linearLayout = (LinearLayout) findViewById(R.id.issuesList);&#xD;&#xA;        if (z3) {&#xD;&#xA;            F2.c(linearLayout);&#xD;&#xA;            h(linearLayout, &amp;#34;Debug Mode Detected&amp;#34;, &amp;#34;Application is running in debuggable mode&amp;#34;);&#xD;&#xA;        }&#xD;&#xA;        if (z) {&#xD;&#xA;            F2.c(linearLayout);&#xD;&#xA;            h(linearLayout, &amp;#34;Root Access Detected&amp;#34;, &amp;#34;Device has been rooted or jailbroken&amp;#34;);&#xD;&#xA;        }&#xD;&#xA;        if (z2) {&#xD;&#xA;            F2.c(linearLayout);&#xD;&#xA;            h(linearLayout, &amp;#34;Frida Framework Detected&amp;#34;, &amp;#34;Dynamic instrumentation tool is running&amp;#34;);&#xD;&#xA;        }&#xD;&#xA;        new CountDownTimerC0176z3(textView, this).start();&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public final native void startFridaMonitoring();&#xD;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can find the first half of the flag with this XOR code from python:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write-up REEZS</title>
      <link>http://localhost:1313/re/1761292805274-dauif/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/re/1761292805274-dauif/</guid>
      <description>&lt;p&gt;Hello guysü§ó! today i will write about a REV challenge that met at the CSCV2025 that named:&lt;em&gt;&lt;strong&gt;Reezs&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://hackmd.io/_uploads/SkxObFzAxe.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;First when you install the file and extract the folder you will have an .exe file like this:  &lt;br&gt;&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/B1I12bfRel.png&#34; alt=&#34;image&#34;&gt;&#xA;When you run that file, you will see an CMD that told you enter the flag:&#xA;&lt;img src=&#34;https://hackmd.io/_uploads/r1JH3-MClx.png&#34; alt=&#34;image&#34;&gt;&#xA;Since there were no clues at first, I typed some random input to see how the program executes. As expected, it shut down immediately.&lt;br&gt;&#xA;Then I opened IDA and loaded the file to read the main function and understand the execution flow. In IDA View-A, the main function looks like this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
